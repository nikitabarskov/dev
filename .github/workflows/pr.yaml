---
on:
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

env:
  XDG_CACHE_HOME: ${{ github.workspace }}/xdg
  NODE_MODULES: ${{ github.workspace }}/node_modules
  DOT_TERRAFORM: ${{ github.workspace }}/.terraform
  TERRAFORM_VERSIONS: ${{ github.workspace }}/.terraform.versions
  BUILD_CACHE_ARGS: "--cache-from type=gha --cache-to type=gha,mode=max"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      terraform: ${{ steps.changes.outputs.terraform }}
      docker: ${{ steps.changes.outputs.docker }}
      prettier: ${{ steps.changes.outputs.prettier }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            terraform:
              - 'terraform/**'
              - 'docker-lock.json'
              - '.github/**'
            docker:
              - added|modified: '**/*.Dockerfile'
              - added|modified: '**/Dockerfile'
              - added|modified: '**/docker-compose.yaml'
              - added|modified: 'docker-lock.json'
            prettier:
              - added|modified: '**/*.md'
              - added|modified: '**/*.mdx'
              - added|modified: '**/*.yaml'
              - added|modified: '**/*.js'
              - added|modified: '**/*.css'
              - added|modified: '**/*.tsx'
              - added|modified: '**/*.json'

  terraform:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ !always() }} # ${{ needs.changes.outputs.terraform == 'true' }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ${{ env.DOT_TERRAFORM }}
          key: ${{ runner.os }}-dot-terraform-${{ hashFiles('terraform/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-dot-terraform-
      - uses: actions/cache@v3
        with:
          path: ${{ env.TERRAFORM_VERSIONS }}
          key: ${{ runner.os }}-terraform-versions-${{ hashFiles('terraform/versions.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-versions-
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          task terraform:validate TERRAFORM_INIT_ARGS="-backend=false"

  docker:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ !always() }} # ${{ needs.changes.outputs.docker == 'true' }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          task validate-images-digests

  prettier:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ !always() }} # ${{ needs.changes.outputs.prettier == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ${{ env.NODE_MODULES }}
          key: ${{ runner.os }}-prettier-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-prettier-
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          task format-check

  build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - run: exit 0
